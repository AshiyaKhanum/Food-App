{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashiya Khanum\\\\Desktop\\\\Complete web development\\\\Udemy react\\\\Food Order App\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  item: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const exisitingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (exisitingCartItem) {\n      const updatedItem = { ...exisitingCartItem,\n        amount: exisitingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n    }\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"2SyrzIf5h4zAVB5yWzJ1q/dSUlI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","item","totalAmount","cartReducer","state","action","type","updatedTotalAmount","price","amount","existingCartItemIndex","items","findIndex","id","exisitingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["C:/Users/Ashiya Khanum/Desktop/Complete web development/Udemy react/Food Order App/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\n\r\nconst defaultCartState = {\r\n    item: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) =>{\r\n    if(action.type==='ADD'){\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) =>item.id === action.item.id\r\n            ); \r\n             \r\n        const exisitingCartItem = state.items[existingCartItemIndex];  \r\n\r\n        let updatedItems;\r\n\r\n        if(exisitingCartItem){\r\n          const updatedItem ={\r\n                ...exisitingCartItem,\r\n                amount: exisitingCartItem.amount + action.item.amount\r\n            };\r\n            updatedItems = [...state.items]\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        } else{\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n        return {\r\n          items: updatedItems,\r\n          totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n\r\n    if(action.type === 'REMOVE'){\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) =>item.id === action.id\r\n            ); \r\n            const existingItem = state.items[existingCartItemIndex]\r\n            const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n            let updatedItems;\r\n            if(existingItem.amount ===1){\r\n                updatedItems = state.items.filter(item => item.id!== action.id);\r\n            }\r\n            else{\r\n                const updatedItem = {...existingItem,amount: existingItem.amount -1}\r\n            }\r\n    }\r\n    return defaultCartState;\r\n\r\n};\r\n\r\nconst CartProvider = props =>{\r\n   const [cartState,dispatchCartAction]= useReducer(cartReducer,defaultCartState);\r\n\r\n  const addItemToCartHandler = (item) =>{\r\n    dispatchCartAction({type: 'ADD', item: item});\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) =>{\r\n    dispatchCartAction({type: 'REMOVE',id: id});\r\n  };\r\n\r\nconst cartContext ={\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler\r\n\r\n}\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n};\r\n\r\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}